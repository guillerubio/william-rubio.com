{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Optional, SkipSelf, InjectionToken, inject, Component, ChangeDetectionStrategy, Input, HostBinding, NgModule, Inject } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nfunction provideIcons(icons) {\n  return [{\n    provide: NgIconsToken,\n    useFactory: parentIcons => ({\n      ...parentIcons?.reduce((acc, icons) => ({\n        ...acc,\n        ...icons\n      }), {}),\n      ...icons\n    }),\n    deps: [[NgIconsToken, new Optional(), new SkipSelf()]],\n    multi: true\n  }];\n}\nconst NgIconsToken = new InjectionToken('Icons Token');\n\n/**\n * Hyphenated to lowerCamelCase\n */\nfunction toPropertyName(str) {\n  return str.replace(/([^a-zA-Z0-9])+(.)?/g, (_, __, chr) => chr ? chr.toUpperCase() : '').replace(/[^a-zA-Z\\d]/g, '').replace(/^([A-Z])/, m => m.toLowerCase());\n}\nlet NgIconComponent = /*#__PURE__*/(() => {\n  class NgIconComponent {\n    constructor() {\n      this._size = '1em';\n      this.sanitizer = inject(DomSanitizer);\n      this.icons = inject(NgIconsToken);\n    }\n    /** Define the name of the icon to display */\n    set name(name) {\n      name = toPropertyName(name);\n      for (const icons of [...this.icons].reverse()) {\n        if (icons[name]) {\n          // insert the SVG into the template\n          this.template = this.sanitizer.bypassSecurityTrustHtml(icons[name]);\n          return;\n        }\n      }\n      // if there is no icon with this name warn the user as they probably forgot to import it\n      console.warn(`No icon named ${name} was found. You may need to import it using the withIcons function.`);\n    }\n    /** Define the size of the icon */\n    set size(size) {\n      // if the size only contains numbers, assume it is in pixels\n      this._size = coerceCssPixelValue(size);\n    }\n    get size() {\n      return this._size;\n    }\n  }\n  NgIconComponent.ɵfac = function NgIconComponent_Factory(t) {\n    return new (t || NgIconComponent)();\n  };\n  NgIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgIconComponent,\n    selectors: [[\"ng-icon\"]],\n    hostVars: 7,\n    hostBindings: function NgIconComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"innerHTML\", ctx.template, i0.ɵɵsanitizeHtml);\n        i0.ɵɵstyleProp(\"--ng-icon__size\", ctx.size)(\"--ng-icon__stroke-width\", ctx.strokeWidth)(\"color\", ctx.color);\n      }\n    },\n    inputs: {\n      name: \"name\",\n      size: \"size\",\n      strokeWidth: \"strokeWidth\",\n      color: \"color\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function NgIconComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%]{display:inline-block;width:var(--ng-icon__size);height:var(--ng-icon__size)}\"],\n    changeDetection: 0\n  });\n  return NgIconComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction coerceCssPixelValue(value) {\n  return value == null ? '' : /^\\d+$/.test(value) ? `${value}px` : value;\n}\nlet NgIconsModule = /*#__PURE__*/(() => {\n  class NgIconsModule {\n    constructor(icons) {\n      if (Object.keys(icons).length === 0) {\n        throw new Error('No icons have been provided. Ensure to include some icons by importing them using NgIconsModule.withIcons({ ... }).');\n      }\n    }\n    /**\n     * Define the icons that will be included in the application. This allows unused icons to\n     * be tree-shaken away to reduce bundle size\n     * @param icons The object containing the required icons\n     */\n    static withIcons(icons) {\n      return {\n        ngModule: NgIconsModule,\n        providers: provideIcons(icons)\n      };\n    }\n  }\n  NgIconsModule.ɵfac = function NgIconsModule_Factory(t) {\n    return new (t || NgIconsModule)(i0.ɵɵinject(NgIconsToken));\n  };\n  NgIconsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgIconsModule\n  });\n  NgIconsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return NgIconsModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// This is a temporary workaround for ng-packagr issue #2398\nlet NG_ICON_DIRECTIVES = /*#__PURE__*/(() => {\n  class NG_ICON_DIRECTIVES {}\n  NG_ICON_DIRECTIVES.ɵfac = function NG_ICON_DIRECTIVES_Factory(t) {\n    return new (t || NG_ICON_DIRECTIVES)();\n  };\n  NG_ICON_DIRECTIVES.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NG_ICON_DIRECTIVES\n  });\n  NG_ICON_DIRECTIVES.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return NG_ICON_DIRECTIVES;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NG_ICON_DIRECTIVES, NgIconComponent, NgIconsModule, NgIconsToken, provideIcons };\n//# sourceMappingURL=ng-icons-core.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}